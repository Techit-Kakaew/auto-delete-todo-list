"use client";

import { Profile } from "@liff/get-profile";
import liff, { Liff } from "@line/liff";
import { useEffect, useState } from "react";

const LineMessage = () => {
  const [profile, setProfile] = useState<Profile>();

  useEffect(() => {
    const fetchProfile = async () => {
      if (typeof window !== "undefined" && liff.isLoggedIn()) {
        const userProfile = await liff?.getProfile();
        setProfile(userProfile);
      }
    };

    fetchProfile();
  }, []);

  const handleSend = async () => {
    try {
      if (!liff.isInClient()) {
        alert("‡πÄ‡∏õ‡∏¥‡∏î‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏≠‡∏õ LINE ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ");
        return;
      }

      await liff.sendMessages([
        {
          type: "text",
          text: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏à‡∏≤‡∏Å LIFF App üëã",
        },
      ]);

      alert("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
      liff.closeWindow(); // ‡∏õ‡∏¥‡∏î LIFF ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    } catch (error) {
      console.error("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
      alert("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }
  };

  return (
    <div>
      <h1>Line Message</h1>
      <button
        style={{
          backgroundColor: "green",
          color: "white",
          padding: "10px",
          borderRadius: "5px",
        }}
        onClick={handleSend}
      >
        Send Message To Line
      </button>

      {profile && <pre>{JSON.stringify(profile)}</pre>}
    </div>
  );
};

export default LineMessage;
